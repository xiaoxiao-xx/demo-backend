<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.microcore.center.mapper.DbPolicyTemplateMapper" >
  <resultMap id="BaseResultMap" type="com.microcore.center.model.DbPolicyTemplate" >
    <result column="policy_item_id" property="policyItemId" jdbcType="VARCHAR" />
    <result column="ext_template_id" property="extTemplateId" jdbcType="VARCHAR" />
	  <result column="sequence_number" property="sequenceNumber" jdbcType="INTEGER"/>
    <result column="required" property="required" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
	  policy_item_id, ext_template_id, sequence_number, required
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.microcore.center.model.DbPolicyTemplateExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from db_policy_template
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.microcore.center.model.DbPolicyTemplateExample" >
    delete from db_policy_template
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.microcore.center.model.DbPolicyTemplate" >
	  insert into db_policy_template (policy_item_id, ext_template_id, sequence_number,
									  required)
	  values (#{policyItemId,jdbcType=VARCHAR}, #{extTemplateId,jdbcType=VARCHAR}, #{sequenceNumber,jdbcType=INTEGER},
			  #{required,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.microcore.center.model.DbPolicyTemplate" >
    insert into db_policy_template
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="policyItemId != null" >
        policy_item_id,
      </if>
      <if test="extTemplateId != null" >
        ext_template_id,
      </if>
		<if test="sequenceNumber != null">
			sequence_number,
      </if>
      <if test="required != null" >
        required,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="policyItemId != null" >
        #{policyItemId,jdbcType=VARCHAR},
      </if>
      <if test="extTemplateId != null" >
        #{extTemplateId,jdbcType=VARCHAR},
      </if>
		<if test="sequenceNumber != null">
			#{sequenceNumber,jdbcType=INTEGER},
      </if>
      <if test="required != null" >
        #{required,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.microcore.center.model.DbPolicyTemplateExample" resultType="java.lang.Integer" >
    select count(*) from db_policy_template
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update db_policy_template
    <set >
      <if test="record.policyItemId != null" >
        policy_item_id = #{record.policyItemId,jdbcType=VARCHAR},
      </if>
      <if test="record.extTemplateId != null" >
        ext_template_id = #{record.extTemplateId,jdbcType=VARCHAR},
      </if>
		<if test="record.sequenceNumber != null">
			sequence_number = #{record.sequenceNumber,jdbcType=INTEGER},
      </if>
      <if test="record.required != null" >
        required = #{record.required,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update db_policy_template
    set policy_item_id = #{record.policyItemId,jdbcType=VARCHAR},
      ext_template_id = #{record.extTemplateId,jdbcType=VARCHAR},
	  sequence_number = #{record.sequenceNumber,jdbcType=INTEGER},
      required = #{record.required,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>