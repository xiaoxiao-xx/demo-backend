<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.microcore.center.mapper.DbPubTsColumnMapper" >
  <resultMap id="BaseResultMap" type="com.microcore.api.model.DbPubTsColumn" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="pid" property="pid" jdbcType="VARCHAR" />
    <result column="column_name" property="columnName" jdbcType="VARCHAR" />
    <result column="column_type" property="columnType" jdbcType="VARCHAR" />
    <result column="column_comment" property="columnComment" jdbcType="VARCHAR" />
    <result column="security_level" property="securityLevel" jdbcType="VARCHAR" />
    <result column="encrypt_type" property="encryptType" jdbcType="VARCHAR" />
    <result column="auth_type" property="authType" jdbcType="VARCHAR" />
    <result column="auth_scope" property="authScope" jdbcType="VARCHAR" />
    <result column="auth_start_time" property="authStartTime" jdbcType="DATE" />
    <result column="auth_end_date" property="authEndDate" jdbcType="DATE" />
    <result column="default_value" property="defaultValue" jdbcType="VARCHAR" />
    <result column="must_fill" property="mustFill" jdbcType="VARCHAR" />
    <result column="kind" property="kind" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, pid, column_name, column_type, column_comment, security_level, encrypt_type, 
    auth_type, auth_scope, auth_start_time, auth_end_date, default_value, must_fill, 
    kind
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.microcore.center.model.DbPubTsColumnExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from db_pub_ts_column
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from db_pub_ts_column
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from db_pub_ts_column
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.microcore.center.model.DbPubTsColumnExample" >
    delete from db_pub_ts_column
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.microcore.api.model.DbPubTsColumn" >
    insert into db_pub_ts_column (id, pid, column_name, 
      column_type, column_comment, security_level, 
      encrypt_type, auth_type, auth_scope, 
      auth_start_time, auth_end_date, default_value, 
      must_fill, kind)
    values (#{id,jdbcType=VARCHAR}, #{pid,jdbcType=VARCHAR}, #{columnName,jdbcType=VARCHAR}, 
      #{columnType,jdbcType=VARCHAR}, #{columnComment,jdbcType=VARCHAR}, #{securityLevel,jdbcType=VARCHAR}, 
      #{encryptType,jdbcType=VARCHAR}, #{authType,jdbcType=VARCHAR}, #{authScope,jdbcType=VARCHAR}, 
      #{authStartTime,jdbcType=DATE}, #{authEndDate,jdbcType=DATE}, #{defaultValue,jdbcType=VARCHAR}, 
      #{mustFill,jdbcType=VARCHAR}, #{kind,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.microcore.api.model.DbPubTsColumn" >
    insert into db_pub_ts_column
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="pid != null" >
        pid,
      </if>
      <if test="columnName != null" >
        column_name,
      </if>
      <if test="columnType != null" >
        column_type,
      </if>
      <if test="columnComment != null" >
        column_comment,
      </if>
      <if test="securityLevel != null" >
        security_level,
      </if>
      <if test="encryptType != null" >
        encrypt_type,
      </if>
      <if test="authType != null" >
        auth_type,
      </if>
      <if test="authScope != null" >
        auth_scope,
      </if>
      <if test="authStartTime != null" >
        auth_start_time,
      </if>
      <if test="authEndDate != null" >
        auth_end_date,
      </if>
      <if test="defaultValue != null" >
        default_value,
      </if>
      <if test="mustFill != null" >
        must_fill,
      </if>
      <if test="kind != null" >
        kind,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="pid != null" >
        #{pid,jdbcType=VARCHAR},
      </if>
      <if test="columnName != null" >
        #{columnName,jdbcType=VARCHAR},
      </if>
      <if test="columnType != null" >
        #{columnType,jdbcType=VARCHAR},
      </if>
      <if test="columnComment != null" >
        #{columnComment,jdbcType=VARCHAR},
      </if>
      <if test="securityLevel != null" >
        #{securityLevel,jdbcType=VARCHAR},
      </if>
      <if test="encryptType != null" >
        #{encryptType,jdbcType=VARCHAR},
      </if>
      <if test="authType != null" >
        #{authType,jdbcType=VARCHAR},
      </if>
      <if test="authScope != null" >
        #{authScope,jdbcType=VARCHAR},
      </if>
      <if test="authStartTime != null" >
        #{authStartTime,jdbcType=DATE},
      </if>
      <if test="authEndDate != null" >
        #{authEndDate,jdbcType=DATE},
      </if>
      <if test="defaultValue != null" >
        #{defaultValue,jdbcType=VARCHAR},
      </if>
      <if test="mustFill != null" >
        #{mustFill,jdbcType=VARCHAR},
      </if>
      <if test="kind != null" >
        #{kind,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.microcore.center.model.DbPubTsColumnExample" resultType="java.lang.Integer" >
    select count(*) from db_pub_ts_column
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update db_pub_ts_column
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.pid != null" >
        pid = #{record.pid,jdbcType=VARCHAR},
      </if>
      <if test="record.columnName != null" >
        column_name = #{record.columnName,jdbcType=VARCHAR},
      </if>
      <if test="record.columnType != null" >
        column_type = #{record.columnType,jdbcType=VARCHAR},
      </if>
      <if test="record.columnComment != null" >
        column_comment = #{record.columnComment,jdbcType=VARCHAR},
      </if>
      <if test="record.securityLevel != null" >
        security_level = #{record.securityLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.encryptType != null" >
        encrypt_type = #{record.encryptType,jdbcType=VARCHAR},
      </if>
      <if test="record.authType != null" >
        auth_type = #{record.authType,jdbcType=VARCHAR},
      </if>
      <if test="record.authScope != null" >
        auth_scope = #{record.authScope,jdbcType=VARCHAR},
      </if>
      <if test="record.authStartTime != null" >
        auth_start_time = #{record.authStartTime,jdbcType=DATE},
      </if>
      <if test="record.authEndDate != null" >
        auth_end_date = #{record.authEndDate,jdbcType=DATE},
      </if>
      <if test="record.defaultValue != null" >
        default_value = #{record.defaultValue,jdbcType=VARCHAR},
      </if>
      <if test="record.mustFill != null" >
        must_fill = #{record.mustFill,jdbcType=VARCHAR},
      </if>
      <if test="record.kind != null" >
        kind = #{record.kind,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update db_pub_ts_column
    set id = #{record.id,jdbcType=VARCHAR},
      pid = #{record.pid,jdbcType=VARCHAR},
      column_name = #{record.columnName,jdbcType=VARCHAR},
      column_type = #{record.columnType,jdbcType=VARCHAR},
      column_comment = #{record.columnComment,jdbcType=VARCHAR},
      security_level = #{record.securityLevel,jdbcType=VARCHAR},
      encrypt_type = #{record.encryptType,jdbcType=VARCHAR},
      auth_type = #{record.authType,jdbcType=VARCHAR},
      auth_scope = #{record.authScope,jdbcType=VARCHAR},
      auth_start_time = #{record.authStartTime,jdbcType=DATE},
      auth_end_date = #{record.authEndDate,jdbcType=DATE},
      default_value = #{record.defaultValue,jdbcType=VARCHAR},
      must_fill = #{record.mustFill,jdbcType=VARCHAR},
      kind = #{record.kind,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.microcore.api.model.DbPubTsColumn" >
    update db_pub_ts_column
    <set >
      <if test="pid != null" >
        pid = #{pid,jdbcType=VARCHAR},
      </if>
      <if test="columnName != null" >
        column_name = #{columnName,jdbcType=VARCHAR},
      </if>
      <if test="columnType != null" >
        column_type = #{columnType,jdbcType=VARCHAR},
      </if>
      <if test="columnComment != null" >
        column_comment = #{columnComment,jdbcType=VARCHAR},
      </if>
      <if test="securityLevel != null" >
        security_level = #{securityLevel,jdbcType=VARCHAR},
      </if>
      <if test="encryptType != null" >
        encrypt_type = #{encryptType,jdbcType=VARCHAR},
      </if>
      <if test="authType != null" >
        auth_type = #{authType,jdbcType=VARCHAR},
      </if>
      <if test="authScope != null" >
        auth_scope = #{authScope,jdbcType=VARCHAR},
      </if>
      <if test="authStartTime != null" >
        auth_start_time = #{authStartTime,jdbcType=DATE},
      </if>
      <if test="authEndDate != null" >
        auth_end_date = #{authEndDate,jdbcType=DATE},
      </if>
      <if test="defaultValue != null" >
        default_value = #{defaultValue,jdbcType=VARCHAR},
      </if>
      <if test="mustFill != null" >
        must_fill = #{mustFill,jdbcType=VARCHAR},
      </if>
      <if test="kind != null" >
        kind = #{kind,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.microcore.api.model.DbPubTsColumn" >
    update db_pub_ts_column
    set pid = #{pid,jdbcType=VARCHAR},
      column_name = #{columnName,jdbcType=VARCHAR},
      column_type = #{columnType,jdbcType=VARCHAR},
      column_comment = #{columnComment,jdbcType=VARCHAR},
      security_level = #{securityLevel,jdbcType=VARCHAR},
      encrypt_type = #{encryptType,jdbcType=VARCHAR},
      auth_type = #{authType,jdbcType=VARCHAR},
      auth_scope = #{authScope,jdbcType=VARCHAR},
      auth_start_time = #{authStartTime,jdbcType=DATE},
      auth_end_date = #{authEndDate,jdbcType=DATE},
      default_value = #{defaultValue,jdbcType=VARCHAR},
      must_fill = #{mustFill,jdbcType=VARCHAR},
      kind = #{kind,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>